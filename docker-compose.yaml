version: "3.6"
services:
  db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  goservice:
    container_name: goBackend
    build: "."
    ports:
      - "8080"
    env_file: .env
    depends_on:
      - db

  nginx:
    container_name: nginxWebserver
    build: 
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - goservice

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/usr/share/nginx/html --email callummcluskey@gmail.com --agree-tos --no-eff-email --staging -d callummclu.co.uk  -d www.callummclu.co.uk
volumes:
  db:
    driver: local
#   certbot-etc:
#   certbot-var:
#   web-root:
#     driver: local
#     driver_opts:
#       type: none
#       device: home/callum/callummclu.co.uk/client/build
#       o: bind
# networks:
#   app-network:
#     driver: bridge