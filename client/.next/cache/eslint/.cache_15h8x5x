[{"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/posts.tsx":"1","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/sessions.tsx":"2","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/users.tsx":"3","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/Container.tsx":"4","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/admin_project_item.tsx":"5","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/adminnav.tsx":"6","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/footer.tsx":"7","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/nav.tsx":"8","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/project_item.tsx":"9","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/hooks/useAuth.tsx":"10","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/about.tsx":"11","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/service-worker.ts":"12","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/serviceWorkerRegistration.ts":"13","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/types/auth.ts":"14","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/index.tsx":"15","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/_app.tsx":"16","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/_error.tsx":"17","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/admin/index.tsx":"18","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/admin/login.tsx":"19","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/scss.d.ts":"20","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/p/[id].tsx":"21"},{"size":642,"mtime":1675447069325,"results":"22","hashOfConfig":"23"},{"size":361,"mtime":1675447072253,"results":"24","hashOfConfig":"23"},{"size":444,"mtime":1675447076960,"results":"25","hashOfConfig":"23"},{"size":307,"mtime":1675445721271,"results":"26","hashOfConfig":"23"},{"size":708,"mtime":1674907531096,"results":"27","hashOfConfig":"23"},{"size":901,"mtime":1674309828862,"results":"28","hashOfConfig":"23"},{"size":567,"mtime":1675445745231,"results":"29","hashOfConfig":"23"},{"size":1354,"mtime":1675445684312,"results":"30","hashOfConfig":"23"},{"size":1512,"mtime":1675447321388,"results":"31","hashOfConfig":"23"},{"size":4254,"mtime":1675446756955,"results":"32","hashOfConfig":"23"},{"size":5729,"mtime":1675445799982,"results":"33","hashOfConfig":"23"},{"size":2917,"mtime":1674841736026,"results":"34","hashOfConfig":"23"},{"size":5663,"mtime":1675446202720,"results":"35","hashOfConfig":"23"},{"size":334,"mtime":1674309170652,"results":"36","hashOfConfig":"23"},{"size":2721,"mtime":1675447490567,"results":"37","hashOfConfig":"23"},{"size":1353,"mtime":1675446853631,"results":"38","hashOfConfig":"23"},{"size":623,"mtime":1675445302032,"results":"39","hashOfConfig":"23"},{"size":2563,"mtime":1675446952784,"results":"40","hashOfConfig":"23"},{"size":2131,"mtime":1675447124930,"results":"41","hashOfConfig":"23"},{"size":25,"mtime":1675445468249,"results":"42","hashOfConfig":"23"},{"size":1256,"mtime":1675447695067,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17y8f4l",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/posts.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/sessions.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/api/users.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/Container.tsx",["116"],[],"import styles from '../styles/sass/container.module.scss'\nimport { Footer } from './footer'\n\nexport const Container = ({children,isAdmin}:any) => {\n    return (\n        <>\n        <div className={`${!isAdmin && styles.container}`}>\n            {children}\n        </div>\n        <Footer/>\n        </>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/admin_project_item.tsx",["117"],[],"import { Badge, Card, Group} from \"@mantine/core\"\n\nexport interface ProjectPost{\n    title:string;\n    description:string;\n    image:string;\n    id:string|number;\n}\n\nexport const AdminProjectItem = ({title,description,image,id}:ProjectPost) => {\n\n    return (\n        <Card className=\"project-item admin\" withBorder >\n            <Group mb=\"md\">\n            <Badge color={'gray'}>edit</Badge>\n            <Badge color={'red'}>delete</Badge>\n            </Group>\n            <div className=\"image\" style={image ? {backgroundImage:`url(${image})`} : {}}/>\n            <div className=\"description\">\n                <h1>{title}</h1>\n                <p>{description}</p>\n            </div>\n        </Card>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/adminnav.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/footer.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/nav.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/components/project_item.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/hooks/useAuth.tsx",["118","119","120","121","122","123","124","125","126","127","128","129"],[],"import { LogInUser, User } from \"../types/auth\";\nimport {\n    createContext,\n    ReactNode,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n  } from \"react\";\n\nimport * as SessionsApi from  '../api/sessions'\nimport * as UsersApi from '../api/users'\n\ninterface AuthContextType {\n    user?: User;\n    loading: boolean;\n    error?: any;\n    login: (loginParams:LogInUser,callback?:any) => void;\n    logout: () => void;\n    reload: () => void;\n    loggedIn: boolean\n    clearError: any;\n}\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType)\n\nexport function AuthProvider({children}:{children:ReactNode}):JSX.Element {\n    const [user, setUser] = useState<User>()\n    const [loggedIn, setLoggedIn] = useState<boolean>(false)\n    const [error,setError] = useState<any>()\n    const [loading, setLoading] = useState<boolean>(false)\n    const [loadingInitial, setLoadingInitial] = useState<boolean>(true)\n\n    useEffect(()=>{\n        if (error) setError(null)\n    },[])\n\n    useEffect(() => {\n            UsersApi.checkAuth()\n            .then(async (res:any) => {\n                if(res !== 'error'){\n\n                    const res_json = await res.json()\n                    if(res_json.username){\n                        \n                        setLoggedIn(res_json.isAuthenticated)\n                        UsersApi.getUserDetails(res_json.username)\n                        .then(async (res:any) => {\n                            const res_json = await res.json()\n                            setUser(res_json.data)\n                        })\n                        .catch((err) => {\n                            setError(err)\n                        })\n                    }\n                }\n            })\n            .finally(()=> setLoadingInitial(false))\n        },[])\n\n    function reload(){\n        setLoading(true)\n        UsersApi.checkAuth()\n            .then(async (res:any) => {\n                const res_json = await res.json()\n                setLoggedIn(res_json.isAuthenticated)\n                UsersApi.getUserDetails(res_json.username)\n                    .then(async (res:any) => {\n                        const res_json = await res.json()\n                        setUser(res_json.data)\n                    })\n            })\n            .finally(()=>setLoading(false))\n    }\n\n    function login({username,password}:LogInUser,callback?:any){\n        setLoading(true)\n        SessionsApi.login({username,password})\n            .then(async (res:any) => {\n                const res_json = await res.json()\n                if (!Object.hasOwn(res_json,'error')){\n                    localStorage.setItem(\"gocial_auth_token\",res_json.token)\n                    UsersApi.checkAuth()\n                        .then(async (res:any) => {\n                            const res_json = await res.json()\n                            setLoggedIn(res_json.isAuthenticated)\n                            UsersApi.getUserDetails(res_json.username)\n                                .then(async (res:any) => {\n                                    const res_json = await res.json()\n                                    setUser(res_json.data)\n                                })\n                                .catch((err) => {\n                                    setError(err)\n                                })\n                        })\n                } else {\n                    setError(res_json.error)\n                }\n            }).catch((error)=>{\n                setError(error)\n            }).finally(()=>{\n                setLoading(false)\n                callback?.()\n            })\n    }\n\n    function clearError(){\n        setError(\"\")\n    }\n\n    function logout(){\n        SessionsApi.logOut().then(()=>setUser(undefined))\n    }\n\n    const memoedValue = useMemo(\n        () => ({\n            user,\n            error,\n            loading,\n            login,\n            clearError,\n            logout,\n            loggedIn,\n            reload\n        }),\n        [user, loading, loggedIn,error]\n    )\n\n    return (\n        <AuthContext.Provider value={memoedValue}>\n            {!loadingInitial && children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default function useAuth() {\n    return useContext(AuthContext)\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/about.tsx",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/service-worker.ts",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/serviceWorkerRegistration.ts",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/types/auth.ts",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/index.tsx",["130"],[],"import styles from '../styles/sass/banner.module.scss'\n\nimport { Container, Text } from '@mantine/core'\nimport { Loader, LoadingOverlay } from \"@mantine/core\"\nimport { useEffect, useState } from \"react\"\nimport { getAllPosts } from \"../api/posts\"\nimport \"../styles/sass/projects.module.scss\"\nimport { ProjectItem, ProjectPost } from \"../components/project_item\"\nimport { motion, Variants } from 'framer-motion'\n\nexport default function LandingPage(){\n\n    const cardVariants: Variants = {\n        onscreen: {\n          y: 50,\n          transition: {\n            type: \"spring\",\n            bounce: 0.5,\n            duration: 0.8\n          }\n        }\n      };\n\n    const [posts, setPosts] = useState<{data: ProjectPost[]}>({data:[]})\n\n    useEffect(()=>{\n        getAllPosts().then(async (res:any) => {\n            const res_json = await res.json()\n            setPosts(res_json) \n        })\n    },[])\n\n    return (\n        <>\n                    <motion.div\n      className={styles['card-container-banner']}\n      initial=\"offscreen\"\n      whileInView=\"onscreen\"\n      viewport={{ once: true, amount: 0.8 }}\n    >\n                    <motion.div className={styles.card} variants={cardVariants}>\n            <div className={styles.banner}>\n\n\n            <div className={styles['text-container']}>\n                <h1>Hi 👋, I'm <Text\n                    variant=\"gradient\"\n                    className={styles.name}\n                    gradient={{ from: 'darkgreen', to: 'teal', deg: 45 }}\n                    sx={{ fontFamily: 'Greycliff CF, sans-serif',display:'inline' }}\n                    >\n                    Callum McLuskey\n                </Text><br/></h1><h1>A Full stack engineer</h1>\n                <p>Gradute software engineer with a variety of professional and personal experience working across the full-stack of software development.</p>\n            </div>\n            <div className={styles.image} style={{backgroundImage:`url(https://static.callummclu.co.uk/main/me.webp)`}}>\n            </div>\n        </div>\n            </motion.div>\n            </motion.div>\n        <h2 className={styles[\"about-content-container\"]}  style={{textAlign:'center', fontSize:30, marginBottom:0}}>😄 Personal Projects</h2>\n            <p style={{textAlign:'center'}}>A selection of some of the best personal projects ive taken on.</p>\n            \n            <div className={styles.projects}>\n            <Container mb={100}>\n            {posts?.data ? posts.data.length> 0 ? posts?.data?.map((item) => <ProjectItem key={item.id} {...item} />) : <p>No data...</p> : <LoadingOverlay loader={<Loader color=\"green\" />} visible={true} overlayBlur={2} />}\n            </Container>\n            </div>\n        </>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/_app.tsx",["131","132"],[],"\nimport { MantineProvider } from '@mantine/core';\nimport { NotificationsProvider } from '@mantine/notifications';\nimport { useEffect } from 'react';\nimport { Container } from '../components/Container';\nimport { Nav } from '../components/nav';\nimport useAuth, { AuthProvider } from '../hooks/useAuth';\nimport '../styles/sass/index.scss'\nimport * as serviceWorkerRegistration from '../serviceWorkerRegistration';\n\nexport default function MyApp({Component, pageProps}:any){\n    const isAdmin = () => {\n        if (typeof window !== 'undefined') {\n          return  window.location.href.includes('/admin')\n        } \n    }\n\n    useEffect(()=>{\n        if('serviceWorker' in navigator){\n            if(typeof window !== 'undefined'){\n                window.addEventListener('load', function(){\n                    serviceWorkerRegistration.register();\n                })\n            }\n        }\n    },[])\n\n    return (\n        <>\n            <MantineProvider>\n                <NotificationsProvider>\n                    <AuthProvider>\n                        {!isAdmin() && <Nav/>}\n                        <Container isAdmin={isAdmin()}>\n                            <Component {...pageProps}/>\n                        </Container>\n                    </AuthProvider>\n                </NotificationsProvider>\n            </MantineProvider>\n        </>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/_error.tsx",["133"],[],"import { Center, Stack, Text, Title } from \"@mantine/core\";\nimport { BiError } from \"react-icons/bi\";\n\ninterface ErrorProps{\n    code:number;\n    message:string;\n    icon?:any;\n}\n\nexport default function Error({code=404,message=\"Page not found.\",icon=<BiError size={80}/>}:ErrorProps) {\n    return (\n        <Stack justify={'center'} h=\"calc(100vh - 60px)\" spacing={0}>\n            <Center>\n                {icon}\n            </Center>\n            <Center>\n                <Title>{code}</Title>\n            </Center>\n            <Center>\n                <Text>{message}</Text>\n            </Center>\n        </Stack>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/admin/index.tsx",["134","135"],[],"import { Container, Title, Button, Group, Modal, TextInput, Textarea } from \"@mantine/core\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { createPost, getAllPosts } from \"../../api/posts\"\nimport { AdminNav } from \"../../components/adminnav\"\nimport { AdminProjectItem } from \"../../components/admin_project_item\"\nimport { ProjectPost } from \"../../components/project_item\"\nimport useAuth from \"../../hooks/useAuth\"\n\nexport default function Home() {\n\n    const [posts, setPosts] = useState<{data: ProjectPost[]}>({data:[]})\n\n    useEffect(()=>{\n        getAllPosts().then(async (res:any) => {\n            const res_json = await res.json()\n            setPosts(res_json) \n        })\n    },[])\n\n    const { loggedIn } = useAuth();\n\n\n    const [modalOpen, setModalOpen] = useState(false)\n\n    const titleRef = useRef<HTMLInputElement>(null)\n    const imageRef = useRef<HTMLInputElement>(null)\n    const descriptionRef = useRef<HTMLInputElement>(null)\n    const bodyRef = useRef<HTMLTextAreaElement>(null)\n\n    const newPost = (e:any) => {\n        e.preventDefault();\n\n\n        createPost({\n            title:titleRef.current?.value as string,\n            description:descriptionRef.current?.value as string,\n            body:bodyRef.current?.value as string,\n            image:imageRef.current?.value as string\n        })\n    }\n\n    return (\n        <>{loggedIn ? <>\n        <Modal\n        style={{top:50}}\n        opened={modalOpen}\n        onClose={() => setModalOpen(false)}\n        title=\"New post!\"\n      >\n        <form onSubmit={newPost}>\n            <TextInput required ref={titleRef} label=\"title\"></TextInput>\n            <TextInput required ref={descriptionRef} label=\"description\"></TextInput>\n            <TextInput ref={imageRef} label=\"image url\"></TextInput>\n            <Textarea required ref={bodyRef} mb=\"xl\" label=\"body\"></Textarea>\n            <Button type=\"submit\">Create new post</Button>\n        </form>\n      </Modal>\n        <Container p=\"xl\">\n            <AdminNav/>\n            <Group mt={60} position=\"apart\">\n            <Title>Posts</Title>\n            <Button onClick={() => setModalOpen(true)}>New Post</Button>\n            </Group>\n            <div className=\"projects\">\n                {posts?.data ? posts.data.length> 0 ? posts?.data?.map((item) => <AdminProjectItem key={item.id} {...item} />) : <p>No data...</p> : \"no content loaded...\"}\n            </div>\n\n            \n\n        </Container>\n        </> : typeof window !== \"undefined\" && window.location.replace(window.location.origin+'/admin/login')}</>\n    )\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/admin/login.tsx",["136","137"],[],"import { Button, Card, Text, Container, Divider, TextInput, Title, Center, Stack, LoadingOverlay } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { useEffect, useRef } from 'react';\nimport useAuth from '../../hooks/useAuth';\n\n\nexport default function Login(){\n    const usernameRef = useRef<HTMLInputElement>(null)\n    const passwordRef = useRef<HTMLInputElement>(null)\n\n    const { login, loggedIn, loading, error, clearError } = useAuth()\n\n    const submitRequest = () => {\n        login({\n            username:usernameRef.current!.value,\n            password:passwordRef.current!.value\n        })\n    }\n\n    useEffect(()=>{\n      if(!error && loggedIn){\n        window.location.replace(window.location.origin+\"/admin\")\n      } else if(error?.length > 0) {\n        showNotification({\n          color:'red',\n          title: 'Error',\n          message: error,\n        })\n        clearError()\n\n      }\n    },[error,loggedIn])\n\n    return (\n        <>\n        {loggedIn ? <></> :\n        <Container h=\"100vh\" style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n          <Card shadow={'sm'} p=\"xl\" w={350} withBorder pos={'relative'}>\n          <LoadingOverlay visible={loading} overlayBlur={2} />\n              <Stack m={\"md\"} mb=\"xl\" spacing={0}>\n              <Center>\n              <Title>\n                Login\n              </Title>\n              </Center>\n              <Center>\n              <Text color={'gray'}>\n                Log into your account\n              </Text>\n              </Center>\n              </Stack>\n            <TextInput ref={usernameRef} mb=\"sm\" placeholder=\"username\"/>\n            <TextInput ref={passwordRef} mt=\"sm\" mb=\"sm\" type={'password'} placeholder='password'/>\n            <Button onClick={submitRequest} mt=\"sm\" fullWidth>Login</Button>\n            <br/>\n            <Divider m=\"lg\"/>\n            <Center>\n            <Text ta=\"center\" color={'gray'}>\n              Signups are closed as this area is used to edit site content.\n            </Text>\n            </Center>\n          </Card>\n        </Container>\n      }</>\n      );\n}","/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/scss.d.ts",[],[],"/Users/callummcluskey/Documents/github/callummclu.co.uk/client/src/pages/p/[id].tsx",["138","139"],[],"import { Divider, Loader, LoadingOverlay, Text, Title, Group, Stack, Avatar } from \"@mantine/core\"\nimport { useEffect, useState } from \"react\"\nimport { getSinglePost } from \"../../api/posts\"\nimport ReactMarkdown from 'react-markdown'\nimport { useRouter } from \"next/router\"\n\nexport default function PostPage(){\n\n    const router = useRouter()\n    const { id } = router.query;\n    \n\n    const [post, setPost] = useState<any>()\n\n    useEffect(()=>{\n        getSinglePost(id as string).then(async (res:any) => {\n            const res_json = await res.json()\n            setPost(res_json) \n        })\n    },[id])\n\n    return (\n        <>\n        <div className=\"page\">\n        <LoadingOverlay loader={<Loader color=\"green\" />}  visible={!post} overlayBlur={2} />\n\n                    <Group>\n                        <Avatar size={'lg'} src={post?.data?.image}/>\n                <Stack spacing={0}>\n                    <Title>{post?.data?.title}</Title>\n                    <Text mb=\"md\">{post?.data?.description}</Text>\n                </Stack>\n                    </Group>\n\n            {post && <Divider variant=\"dashed\"/>}\n            <Text>\n\n                <ReactMarkdown children={post?.data?.body}/>\n            </Text>\n        </div>\n        </>\n    )\n}",{"ruleId":"140","severity":1,"message":"141","line":4,"column":46,"nodeType":"142","messageId":"143","endLine":4,"endColumn":49,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":10,"column":59,"nodeType":"147","messageId":"148","endLine":10,"endColumn":61},{"ruleId":"140","severity":1,"message":"141","line":17,"column":13,"nodeType":"142","messageId":"143","endLine":17,"endColumn":16,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"141","line":18,"column":45,"nodeType":"142","messageId":"143","endLine":18,"endColumn":48,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"141","line":22,"column":17,"nodeType":"142","messageId":"143","endLine":22,"endColumn":20,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"141","line":30,"column":39,"nodeType":"142","messageId":"143","endLine":30,"endColumn":42,"suggestions":"152"},{"ruleId":"140","severity":1,"message":"141","line":40,"column":30,"nodeType":"142","messageId":"143","endLine":40,"endColumn":33,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"141","line":48,"column":42,"nodeType":"142","messageId":"143","endLine":48,"endColumn":45,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"141","line":64,"column":30,"nodeType":"142","messageId":"143","endLine":64,"endColumn":33,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"141","line":68,"column":38,"nodeType":"142","messageId":"143","endLine":68,"endColumn":41,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"141","line":76,"column":60,"nodeType":"142","messageId":"143","endLine":76,"endColumn":63,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"141","line":79,"column":30,"nodeType":"142","messageId":"143","endLine":79,"endColumn":33,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"141","line":84,"column":42,"nodeType":"142","messageId":"143","endLine":84,"endColumn":45,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"141","line":88,"column":50,"nodeType":"142","messageId":"143","endLine":88,"endColumn":53,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"141","line":27,"column":39,"nodeType":"142","messageId":"143","endLine":27,"endColumn":42,"suggestions":"161"},{"ruleId":"145","severity":1,"message":"162","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":11,"column":54,"nodeType":"142","messageId":"143","endLine":11,"endColumn":57,"suggestions":"163"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":11,"nodeType":"142","messageId":"143","endLine":7,"endColumn":14,"suggestions":"164"},{"ruleId":"140","severity":1,"message":"141","line":14,"column":39,"nodeType":"142","messageId":"143","endLine":14,"endColumn":42,"suggestions":"165"},{"ruleId":"140","severity":1,"message":"141","line":30,"column":24,"nodeType":"142","messageId":"143","endLine":30,"endColumn":27,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":15,"column":22,"nodeType":"169","messageId":"170","endLine":15,"endColumn":42,"suggestions":"171"},{"ruleId":"167","severity":1,"message":"168","line":16,"column":22,"nodeType":"169","messageId":"170","endLine":16,"endColumn":42,"suggestions":"172"},{"ruleId":"140","severity":1,"message":"141","line":13,"column":38,"nodeType":"142","messageId":"143","endLine":13,"endColumn":41,"suggestions":"173"},{"ruleId":"140","severity":1,"message":"141","line":16,"column":53,"nodeType":"142","messageId":"143","endLine":16,"endColumn":56,"suggestions":"174"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["175","176"],"@typescript-eslint/no-unused-vars","'id' is defined but never used.","Identifier","unusedVar",["177","178"],["179","180"],["181","182"],["183","184"],["185","186"],["187","188"],["189","190"],["191","192"],["193","194"],["195","196"],["197","198"],["199","200"],["201","202"],"'useAuth' is defined but never used.",["203","204"],["205","206"],["207","208"],["209","210"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["211"],["212"],["213","214"],["215","216"],{"messageId":"217","fix":"218","desc":"219"},{"messageId":"220","fix":"221","desc":"222"},{"messageId":"217","fix":"223","desc":"219"},{"messageId":"220","fix":"224","desc":"222"},{"messageId":"217","fix":"225","desc":"219"},{"messageId":"220","fix":"226","desc":"222"},{"messageId":"217","fix":"227","desc":"219"},{"messageId":"220","fix":"228","desc":"222"},{"messageId":"217","fix":"229","desc":"219"},{"messageId":"220","fix":"230","desc":"222"},{"messageId":"217","fix":"231","desc":"219"},{"messageId":"220","fix":"232","desc":"222"},{"messageId":"217","fix":"233","desc":"219"},{"messageId":"220","fix":"234","desc":"222"},{"messageId":"217","fix":"235","desc":"219"},{"messageId":"220","fix":"236","desc":"222"},{"messageId":"217","fix":"237","desc":"219"},{"messageId":"220","fix":"238","desc":"222"},{"messageId":"217","fix":"239","desc":"219"},{"messageId":"220","fix":"240","desc":"222"},{"messageId":"217","fix":"241","desc":"219"},{"messageId":"220","fix":"242","desc":"222"},{"messageId":"217","fix":"243","desc":"219"},{"messageId":"220","fix":"244","desc":"222"},{"messageId":"217","fix":"245","desc":"219"},{"messageId":"220","fix":"246","desc":"222"},{"messageId":"217","fix":"247","desc":"219"},{"messageId":"220","fix":"248","desc":"222"},{"messageId":"217","fix":"249","desc":"219"},{"messageId":"220","fix":"250","desc":"222"},{"messageId":"217","fix":"251","desc":"219"},{"messageId":"220","fix":"252","desc":"222"},{"messageId":"217","fix":"253","desc":"219"},{"messageId":"220","fix":"254","desc":"222"},{"messageId":"217","fix":"255","desc":"219"},{"messageId":"220","fix":"256","desc":"222"},{"messageId":"257","fix":"258","desc":"259"},{"messageId":"257","fix":"260","desc":"259"},{"messageId":"217","fix":"261","desc":"219"},{"messageId":"220","fix":"262","desc":"222"},{"messageId":"217","fix":"263","desc":"219"},{"messageId":"220","fix":"264","desc":"222"},"suggestUnknown",{"range":"265","text":"266"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"265","text":"267"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"268","text":"266"},{"range":"268","text":"267"},{"range":"269","text":"266"},{"range":"269","text":"267"},{"range":"270","text":"266"},{"range":"270","text":"267"},{"range":"271","text":"266"},{"range":"271","text":"267"},{"range":"272","text":"266"},{"range":"272","text":"267"},{"range":"273","text":"266"},{"range":"273","text":"267"},{"range":"274","text":"266"},{"range":"274","text":"267"},{"range":"275","text":"266"},{"range":"275","text":"267"},{"range":"276","text":"266"},{"range":"276","text":"267"},{"range":"277","text":"266"},{"range":"277","text":"267"},{"range":"278","text":"266"},{"range":"278","text":"267"},{"range":"279","text":"266"},{"range":"279","text":"267"},{"range":"280","text":"266"},{"range":"280","text":"267"},{"range":"281","text":"266"},{"range":"281","text":"267"},{"range":"282","text":"266"},{"range":"282","text":"267"},{"range":"283","text":"266"},{"range":"283","text":"267"},{"range":"284","text":"266"},{"range":"284","text":"267"},"suggestOptionalChain",{"range":"285","text":"286"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"287","text":"286"},{"range":"288","text":"266"},{"range":"288","text":"267"},{"range":"289","text":"266"},{"range":"289","text":"267"},[138,141],"unknown","never",[338,341],[387,390],[487,490],[790,793],[1078,1081],[1418,1421],[1907,1910],[2117,2120],[2380,2383],[2487,2490],[2761,2764],[3019,3022],[792,795],[465,468],[172,175],[595,598],[1038,1041],[573,574],"?",[622,623],[419,422],[499,502]]